{"version":3,"sources":["components/form.js","components/todo.js","components/todoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodo","setFilter","value","onChange","e","target","type","className","placeholder","onClick","preventDefault","trim","text","completed","id","Math","round","random","name","Todo","todo","map","el","filter","TodoList","filteredTodo","App","useState","setFilteredTodo","useEffect","getLocal","filterHandling","saveLocal","localStorage","setItem","JSON","stringify","getItem","localTodo","parse","class","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd5460a8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = ({inputText,setInputText,todos, setTodo,setFilter}) => {\n\tconst inputHandler=(e)=>{\n\t\t//console.log(e.target.value);\n\t\tsetInputText(e.target.value)\n\t}\n\n\tconst submitTodohandler=(e)=>{\n\t\te.preventDefault();\n\t\tif (inputText.trim()!=='')\n\t\t\tsetTodo([...todos,{text:inputText,completed:false, id:Math.round(Math.random()*1000)}]);\n\t\tsetInputText('');\n\n\t}\n\n\tconst filterHandler= (e)=>{\n\t\t//console.log(e.target.value);\n\t\tsetFilter(e.target.value);\n\n\t};\n\treturn(\n\t\t<form>\n      <input value={inputText} onChange={inputHandler} type=\"text\" className=\"todo-input\" placeholder=\"What's your next Task?\"/>\n      <button onClick={submitTodohandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange={filterHandler} name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n\t\t)\n}\n\nexport default Form;","import React from 'react';\n\nconst Todo = ({todo,todos,setTodo}) =>{\n\tconst deleteHandler=()=>{\n\t\tsetTodo(todos.filter(el=>el.id!==todo.id));\n\n\t}\n\n\tconst completeHandler=()=> {\n\t\tsetTodo(todos.map((el)=>{\n\t\t\tif(el.id===todo.id){\n\t\t\t\treturn {...el,completed:!el.completed}\n\t\t\t}\n\t\t\treturn el;\n\t\t}))\n\t}\n\treturn(\n\t\t<div className=\"todo\">\n      \t\t<li className={`todo-item ${todo.completed? 'completed':''}`}>{todo.text}</li>\n    \t\t<button className='complete-btn' onClick={completeHandler}><i className={`${todo.completed? 'fas fa-undo':'fas fa-check'}`}></i></button>\n    \t\t<button className='trash-btn' onClick={deleteHandler}><i className='fas fa-trash'></i></button>\n    </div>\n\t\t)\n}\n\nexport default Todo;","import React from 'react';\nimport Todo from './todo';\n\nconst TodoList = ({todos,setTodo,filteredTodo}) =>{\n\treturn(\n\t\t<div className=\"todo-container\">\n      <ul className=\"todo-list\">\n      \t{filteredTodo.map((todo)=>(\n      \t\t<Todo key={todo.id} todo={todo} todos={todos} setTodo={setTodo}/>\n      \t\t))}\n      </ul>\n    </div>\n\t\t)\n}\n\nexport default TodoList","import React,{ useState, useEffect} from 'react';\nimport './App.css';\nimport Form from './components/form';\nimport TodoList from './components/todoList'\n\nfunction App() {\n\n  const[inputText,setInputText]=useState(\"\");\n  const[todos,setTodo]=useState([]);\n  const[filter,setFilter]=useState('all');\n  const[filteredTodo, setFilteredTodo]=useState([])\n\n//use effect hooks\n  useEffect(() => {\n    getLocal();\n  },[]);\n\n  useEffect(() => {\n    filterHandling();\n    saveLocal();\n  },[todos,filter]);\n  \n  const filterHandling=() =>{\n    switch(filter){\n      case 'completed':\n        setFilteredTodo(todos.filter(todo=> todo.completed===true))\n        break;\n\n      case 'uncompleted':\n        setFilteredTodo(todos.filter(todo=> todo.completed===false))\n        break;\n\n      default:\n        setFilteredTodo(todos);\n    }\n  }\n\n  //save to local storage\n  const saveLocal= () =>{  \n      localStorage.setItem('todos',JSON.stringify(todos));\n  }\n\n  const getLocal= () =>{  \n    if (localStorage.getItem('todos')===null){\n      localStorage.setItem('todos',JSON.stringify([]));\n    }\n    else {\n      let localTodo=JSON.parse(localStorage.getItem('todos'));\n      setTodo(localTodo);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1><i class=\"fas fa-tasks\"></i> Todo List </h1>\n    </header>\n    <Form\n     todos={todos}\n     setTodo={setTodo} \n     inputText={inputText} \n     setInputText={setInputText}\n     //filter={filter}\n     setFilter={setFilter} />\n    <TodoList todos={todos} setTodo={setTodo} filteredTodo={filteredTodo}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}